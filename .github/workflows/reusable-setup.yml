name: Reusable Setup

on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment'
        type: string
        required: true
      terraform_version:
        description: 'Terraform version'
        type: string
        default: '1.5.7'
      terragrunt_version:
        description: 'Terragrunt version'
        type: string
        default: '0.52.0'
      working_directory:
        description: 'Working directory'
        type: string
        default: 'infrastructure/environments'
    outputs:
      project_id:
        description: 'GCP Project ID'
        value: ${{ jobs.setup.outputs.project_id }}
      state_bucket:
        description: 'Terraform state bucket'
        value: ${{ jobs.setup.outputs.state_bucket }}
    secrets:
      GCP_PROJECT_ID:
        required: false
      GCP_SERVICE_ACCOUNT_KEY:
        required: false
      WIF_PROVIDER:
        required: false
      WIF_SERVICE_ACCOUNT:
        required: false
      STATE_BUCKET:
        required: false

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      project_id: ${{ steps.config.outputs.project_id }}
      state_bucket: ${{ steps.config.outputs.state_bucket }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Terraform and Terragrunt
        uses: ./.github/actions/setup-environment
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terragrunt_version: ${{ inputs.terragrunt_version }}
          working_directory: ${{ inputs.working_directory }}/${{ inputs.environment }}
          gcp_auth_method: ${{ secrets.WIF_PROVIDER && 'workload-identity' || 'service-account' }}
          gcp_service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          gcp_workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          gcp_service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          cache_key_prefix: terragrunt-${{ inputs.environment }}
      
      - name: Export Configuration
        id: config
        run: |
          echo "project_id=${{ secrets.GCP_PROJECT_ID || 'test-project-123' }}" >> $GITHUB_OUTPUT
          echo "state_bucket=${{ secrets.STATE_BUCKET || 'test-terraform-state' }}" >> $GITHUB_OUTPUT
          
          # Log configuration (without sensitive data)
          echo "::notice::Environment: ${{ inputs.environment }}"
          echo "::notice::Terraform Version: ${{ inputs.terraform_version }}"
          echo "::notice::Terragrunt Version: ${{ inputs.terragrunt_version }}"
          echo "::notice::Working Directory: ${{ inputs.working_directory }}/${{ inputs.environment }}"
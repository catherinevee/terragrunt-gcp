name: Drift Detection

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to check'
        required: false
        type: choice
        options:
          - all
          - dev
          - staging
          - prod
        default: all

env:
  TERRAFORM_VERSION: '1.5.7'
  TERRAGRUNT_VERSION: '0.52.0'

jobs:
  drift-check:
    name: Check Drift - ${{ matrix.environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ github.event.inputs.environment == 'all' && fromJson('["dev", "staging", "prod"]') || fromJson(format('["{0}"]', github.event.inputs.environment || 'dev')) }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Setup Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Detect Drift
        working-directory: infrastructure/environments/${{ matrix.environment }}
        run: |
          echo "🔍 Checking for drift in ${{ matrix.environment }} environment..."
          terragrunt run-all init --terragrunt-non-interactive
          
          # Run plan and capture output
          terragrunt run-all plan --terragrunt-non-interactive -detailed-exitcode || EXIT_CODE=$?
          
          if [ "${EXIT_CODE}" == "2" ]; then
            echo "⚠️ Drift detected in ${{ matrix.environment }}!"
            echo "drift_detected=true" >> $GITHUB_ENV
          else
            echo "✅ No drift detected in ${{ matrix.environment }}"
            echo "drift_detected=false" >> $GITHUB_ENV
          fi

      - name: Create Issue if Drift Detected
        if: env.drift_detected == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Infrastructure Drift Detected in ${process.env.ENVIRONMENT}`,
              body: `Drift detection has found changes in the **${process.env.ENVIRONMENT}** environment.
              
              Please review the terraform plan output and apply changes if intended.
              
              Workflow Run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['drift', 'infrastructure', process.env.ENVIRONMENT]
            });
        env:
          ENVIRONMENT: ${{ matrix.environment }}